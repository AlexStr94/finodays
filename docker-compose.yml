services:
  db:
    container_name: db
    image: postgres:15-alpine
    restart: always
    env_file:
      - .env
    expose:
      - '5432'
    command: postgres -N 500
    volumes: 
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      # - db:/var/lib/postgresql/data

  mock_server:
    container_name: mock_server
    restart: always
    build:
      context: .
      dockerfile: dockerization/mock_server/Dockerfile
    env_file:
      - mock_server/.env
    depends_on:
      - db

  backend:
    container_name: backend
    restart: always
    build:
      context: .
      dockerfile: dockerization/Dockerfile
    env_file:
      - .env
    depends_on:
      - db

  nginx:
    container_name: nginx
    restart: always
    build:
      context: .
      dockerfile: dockerization/nginx/Dockerfile
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./terminal:/usr/share/nginx/html/terminal
  
  certbot:
    image: certbot/certbot:latest
    restart: always
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
      
volumes:
  db:
    driver: local


